// Code generated by protoc-gen-go. DO NOT EDIT.
// source: messages/common/common.proto

package common

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	descriptor "github.com/golang/protobuf/protoc-gen-go/descriptor"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type SnowStream_SinkType int32

const (
	SnowStream_SINK_TYPE_UNKNOWN SnowStream_SinkType = 0
	//* snow-stream will only append incoming data to sink
	SnowStream_APPEND SnowStream_SinkType = 1
	//* snow-stream will only merge incoming data to sink based on the partition key and reduce timestamp
	SnowStream_MERGE        SnowStream_SinkType = 2
	SnowStream_CUSTOM_MERGE SnowStream_SinkType = 3
)

var SnowStream_SinkType_name = map[int32]string{
	0: "SINK_TYPE_UNKNOWN",
	1: "APPEND",
	2: "MERGE",
	3: "CUSTOM_MERGE",
}

var SnowStream_SinkType_value = map[string]int32{
	"SINK_TYPE_UNKNOWN": 0,
	"APPEND":            1,
	"MERGE":             2,
	"CUSTOM_MERGE":      3,
}

func (x SnowStream_SinkType) String() string {
	return proto.EnumName(SnowStream_SinkType_name, int32(x))
}

func (SnowStream_SinkType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_38a7f6b62a9ba3a7, []int{0, 0}
}

type SnowStream_KafkaCluster int32

const (
	SnowStream_KAFKA_CLUSTER_UNKNOWN SnowStream_KafkaCluster = 0
	SnowStream_FRANZ                 SnowStream_KafkaCluster = 1
	SnowStream_FRANZALYTICS          SnowStream_KafkaCluster = 2
)

var SnowStream_KafkaCluster_name = map[int32]string{
	0: "KAFKA_CLUSTER_UNKNOWN",
	1: "FRANZ",
	2: "FRANZALYTICS",
}

var SnowStream_KafkaCluster_value = map[string]int32{
	"KAFKA_CLUSTER_UNKNOWN": 0,
	"FRANZ":                 1,
	"FRANZALYTICS":          2,
}

func (x SnowStream_KafkaCluster) String() string {
	return proto.EnumName(SnowStream_KafkaCluster_name, int32(x))
}

func (SnowStream_KafkaCluster) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_38a7f6b62a9ba3a7, []int{0, 1}
}

//* For consumers that need to know the operation type e.g create, update, delete
type MessageMetadata_OperationType int32

const (
	MessageMetadata_UNKNOWN MessageMetadata_OperationType = 0
	MessageMetadata_CREATE  MessageMetadata_OperationType = 1
	MessageMetadata_UPDATE  MessageMetadata_OperationType = 2
	MessageMetadata_DELETE  MessageMetadata_OperationType = 3
	MessageMetadata_NOOP    MessageMetadata_OperationType = 4
)

var MessageMetadata_OperationType_name = map[int32]string{
	0: "UNKNOWN",
	1: "CREATE",
	2: "UPDATE",
	3: "DELETE",
	4: "NOOP",
}

var MessageMetadata_OperationType_value = map[string]int32{
	"UNKNOWN": 0,
	"CREATE":  1,
	"UPDATE":  2,
	"DELETE":  3,
	"NOOP":    4,
}

func (x MessageMetadata_OperationType) String() string {
	return proto.EnumName(MessageMetadata_OperationType_name, int32(x))
}

func (MessageMetadata_OperationType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_38a7f6b62a9ba3a7, []int{5, 0}
}

//* For deploying snow-stream instances to your kafka stream example syntax: "option (messages.common.snow_stream_config) = { sink_type: APPEND, buffer_size: 100, kafka_cluster: FRANZ };"
type SnowStream struct {
	//* required e.g. APPEND
	SinkType SnowStream_SinkType `protobuf:"varint,1,opt,name=sink_type,json=sinkType,proto3,enum=deliveroo.protobuf.messages.common.SnowStream_SinkType" json:"sink_type,omitempty"`
	//* required e.g. 1000
	BufferSize int32 `protobuf:"varint,2,opt,name=buffer_size,json=bufferSize,proto3" json:"buffer_size,omitempty"`
	//* required e.g. FRANZALYTICS
	KafkaCluster SnowStream_KafkaCluster `protobuf:"varint,3,opt,name=kafka_cluster,json=kafkaCluster,proto3,enum=deliveroo.protobuf.messages.common.SnowStream_KafkaCluster" json:"kafka_cluster,omitempty"`
	//* optional - defaults to "message_metadata.source_timestamp" if empty
	Reduce string `protobuf:"bytes,4,opt,name=reduce,proto3" json:"reduce,omitempty"`
	//* optional - defaults to "message_metadata.unique_id" if empty
	Partition string `protobuf:"bytes,5,opt,name=partition,proto3" json:"partition,omitempty"`
	//* optional - defaults to "protobufstreamdeserializer" if empty
	DeserializerType     string   `protobuf:"bytes,6,opt,name=deserializerType,proto3" json:"deserializerType,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SnowStream) Reset()         { *m = SnowStream{} }
func (m *SnowStream) String() string { return proto.CompactTextString(m) }
func (*SnowStream) ProtoMessage()    {}
func (*SnowStream) Descriptor() ([]byte, []int) {
	return fileDescriptor_38a7f6b62a9ba3a7, []int{0}
}

func (m *SnowStream) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SnowStream.Unmarshal(m, b)
}
func (m *SnowStream) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SnowStream.Marshal(b, m, deterministic)
}
func (m *SnowStream) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SnowStream.Merge(m, src)
}
func (m *SnowStream) XXX_Size() int {
	return xxx_messageInfo_SnowStream.Size(m)
}
func (m *SnowStream) XXX_DiscardUnknown() {
	xxx_messageInfo_SnowStream.DiscardUnknown(m)
}

var xxx_messageInfo_SnowStream proto.InternalMessageInfo

func (m *SnowStream) GetSinkType() SnowStream_SinkType {
	if m != nil {
		return m.SinkType
	}
	return SnowStream_SINK_TYPE_UNKNOWN
}

func (m *SnowStream) GetBufferSize() int32 {
	if m != nil {
		return m.BufferSize
	}
	return 0
}

func (m *SnowStream) GetKafkaCluster() SnowStream_KafkaCluster {
	if m != nil {
		return m.KafkaCluster
	}
	return SnowStream_KAFKA_CLUSTER_UNKNOWN
}

func (m *SnowStream) GetReduce() string {
	if m != nil {
		return m.Reduce
	}
	return ""
}

func (m *SnowStream) GetPartition() string {
	if m != nil {
		return m.Partition
	}
	return ""
}

func (m *SnowStream) GetDeserializerType() string {
	if m != nil {
		return m.DeserializerType
	}
	return ""
}

//* Monetary information indicating amount and currency
type Amount struct {
	//* Integer representing monetary amount
	Fractional int32 `protobuf:"varint,1,opt,name=fractional,proto3" json:"fractional,omitempty"`
	//* ISO 4217 currency code
	CurrencyCode         string   `protobuf:"bytes,2,opt,name=currency_code,json=currencyCode,proto3" json:"currency_code,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Amount) Reset()         { *m = Amount{} }
func (m *Amount) String() string { return proto.CompactTextString(m) }
func (*Amount) ProtoMessage()    {}
func (*Amount) Descriptor() ([]byte, []int) {
	return fileDescriptor_38a7f6b62a9ba3a7, []int{1}
}

func (m *Amount) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Amount.Unmarshal(m, b)
}
func (m *Amount) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Amount.Marshal(b, m, deterministic)
}
func (m *Amount) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Amount.Merge(m, src)
}
func (m *Amount) XXX_Size() int {
	return xxx_messageInfo_Amount.Size(m)
}
func (m *Amount) XXX_DiscardUnknown() {
	xxx_messageInfo_Amount.DiscardUnknown(m)
}

var xxx_messageInfo_Amount proto.InternalMessageInfo

func (m *Amount) GetFractional() int32 {
	if m != nil {
		return m.Fractional
	}
	return 0
}

func (m *Amount) GetCurrencyCode() string {
	if m != nil {
		return m.CurrencyCode
	}
	return ""
}

//* Geo coordinates describing the location of a mobile device
type DeviceLocation struct {
	//* The angular distance in decimal degrees of a place north or south of the earth's equator
	Latitude float64 `protobuf:"fixed64,1,opt,name=latitude,proto3" json:"latitude,omitempty"`
	//* The angular distance in decimal degrees of a place east or west of the Greenwich meridian
	Longitude float64 `protobuf:"fixed64,2,opt,name=longitude,proto3" json:"longitude,omitempty"`
	//* The device gps accuracy in meters
	AccuracyM int32 `protobuf:"varint,3,opt,name=accuracy_m,json=accuracyM,proto3" json:"accuracy_m,omitempty"`
	//* The client location timestamp
	Timestamp int64 `protobuf:"varint,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	//* The device altitude (meters)
	Altitude float64 `protobuf:"fixed64,5,opt,name=altitude,proto3" json:"altitude,omitempty"`
	//* The device speed (meters / s)
	Speed                float64  `protobuf:"fixed64,6,opt,name=speed,proto3" json:"speed,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeviceLocation) Reset()         { *m = DeviceLocation{} }
func (m *DeviceLocation) String() string { return proto.CompactTextString(m) }
func (*DeviceLocation) ProtoMessage()    {}
func (*DeviceLocation) Descriptor() ([]byte, []int) {
	return fileDescriptor_38a7f6b62a9ba3a7, []int{2}
}

func (m *DeviceLocation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeviceLocation.Unmarshal(m, b)
}
func (m *DeviceLocation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeviceLocation.Marshal(b, m, deterministic)
}
func (m *DeviceLocation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeviceLocation.Merge(m, src)
}
func (m *DeviceLocation) XXX_Size() int {
	return xxx_messageInfo_DeviceLocation.Size(m)
}
func (m *DeviceLocation) XXX_DiscardUnknown() {
	xxx_messageInfo_DeviceLocation.DiscardUnknown(m)
}

var xxx_messageInfo_DeviceLocation proto.InternalMessageInfo

func (m *DeviceLocation) GetLatitude() float64 {
	if m != nil {
		return m.Latitude
	}
	return 0
}

func (m *DeviceLocation) GetLongitude() float64 {
	if m != nil {
		return m.Longitude
	}
	return 0
}

func (m *DeviceLocation) GetAccuracyM() int32 {
	if m != nil {
		return m.AccuracyM
	}
	return 0
}

func (m *DeviceLocation) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *DeviceLocation) GetAltitude() float64 {
	if m != nil {
		return m.Altitude
	}
	return 0
}

func (m *DeviceLocation) GetSpeed() float64 {
	if m != nil {
		return m.Speed
	}
	return 0
}

//* Geo coordinates describing the location of an entity
type Location struct {
	//* The angular distance in decimal degrees of a place north or south of the earth's equator
	Latitude float64 `protobuf:"fixed64,1,opt,name=latitude,proto3" json:"latitude,omitempty"`
	//* The angular distance in decimal degrees of a place east or west of the Greenwich meridian
	Longitude            float64  `protobuf:"fixed64,2,opt,name=longitude,proto3" json:"longitude,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Location) Reset()         { *m = Location{} }
func (m *Location) String() string { return proto.CompactTextString(m) }
func (*Location) ProtoMessage()    {}
func (*Location) Descriptor() ([]byte, []int) {
	return fileDescriptor_38a7f6b62a9ba3a7, []int{3}
}

func (m *Location) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Location.Unmarshal(m, b)
}
func (m *Location) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Location.Marshal(b, m, deterministic)
}
func (m *Location) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Location.Merge(m, src)
}
func (m *Location) XXX_Size() int {
	return xxx_messageInfo_Location.Size(m)
}
func (m *Location) XXX_DiscardUnknown() {
	xxx_messageInfo_Location.DiscardUnknown(m)
}

var xxx_messageInfo_Location proto.InternalMessageInfo

func (m *Location) GetLatitude() float64 {
	if m != nil {
		return m.Latitude
	}
	return 0
}

func (m *Location) GetLongitude() float64 {
	if m != nil {
		return m.Longitude
	}
	return 0
}

//* API links for obtaining further data in relation to this message
type Link struct {
	//* The resource name
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	//* The URL of the resource
	Href                 string   `protobuf:"bytes,2,opt,name=href,proto3" json:"href,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Link) Reset()         { *m = Link{} }
func (m *Link) String() string { return proto.CompactTextString(m) }
func (*Link) ProtoMessage()    {}
func (*Link) Descriptor() ([]byte, []int) {
	return fileDescriptor_38a7f6b62a9ba3a7, []int{4}
}

func (m *Link) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Link.Unmarshal(m, b)
}
func (m *Link) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Link.Marshal(b, m, deterministic)
}
func (m *Link) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Link.Merge(m, src)
}
func (m *Link) XXX_Size() int {
	return xxx_messageInfo_Link.Size(m)
}
func (m *Link) XXX_DiscardUnknown() {
	xxx_messageInfo_Link.DiscardUnknown(m)
}

var xxx_messageInfo_Link proto.InternalMessageInfo

func (m *Link) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Link) GetHref() string {
	if m != nil {
		return m.Href
	}
	return ""
}

//* All messages published to the bus should contain this metadata. It should be ommitted from the nested models
type MessageMetadata struct {
	//* The unique identifier for this resource/event
	UniqueId string `protobuf:"bytes,1,opt,name=unique_id,json=uniqueId,proto3" json:"unique_id,omitempty"`
	//* Set by the Stream Producer API. This is the time this message was posted to the bus
	PostToStreamAt *timestamp.Timestamp `protobuf:"bytes,2,opt,name=post_to_stream_at,json=postToStreamAt,proto3" json:"post_to_stream_at,omitempty"`
	//* Populated by the source before being published to the Stream Producer API. This time is used to determine the ordering of messages in the consumer
	SourceTimestamp *timestamp.Timestamp `protobuf:"bytes,3,opt,name=source_timestamp,json=sourceTimestamp,proto3" json:"source_timestamp,omitempty"`
	//* For consumers that need to spider APIs to obtain further data
	Links []*Link                       `protobuf:"bytes,4,rep,name=links,proto3" json:"links,omitempty"`
	Type  MessageMetadata_OperationType `protobuf:"varint,5,opt,name=type,proto3,enum=deliveroo.protobuf.messages.common.MessageMetadata_OperationType" json:"type,omitempty"`
	//* The DRN (Deliveroo Resource Name) for this entity, if it exists. Note: non-entities may not have a DRN
	Drn string `protobuf:"bytes,6,opt,name=drn,proto3" json:"drn,omitempty"`
	//* The id portion of the drn
	DrnId string `protobuf:"bytes,7,opt,name=drn_id,json=drnId,proto3" json:"drn_id,omitempty"`
	// Datadog's trace ID - Required for distributed tracing. For more info see https://docs.datadoghq.com/tracing/setup/ruby/#distributed-tracing
	TraceId string `protobuf:"bytes,8,opt,name=trace_id,json=traceId,proto3" json:"trace_id,omitempty"`
	// Datadog's parent span ID - Required for distributed tracing. For more info see https://docs.datadoghq.com/tracing/setup/ruby/#distributed-tracing
	ParentId string `protobuf:"bytes,9,opt,name=parent_id,json=parentId,proto3" json:"parent_id,omitempty"`
	// Datadog's sampling priority - Required for distributed tracing. For more info see https://docs.datadoghq.com/tracing/setup/ruby/#distributed-tracing
	SamplingPriority     string   `protobuf:"bytes,10,opt,name=sampling_priority,json=samplingPriority,proto3" json:"sampling_priority,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MessageMetadata) Reset()         { *m = MessageMetadata{} }
func (m *MessageMetadata) String() string { return proto.CompactTextString(m) }
func (*MessageMetadata) ProtoMessage()    {}
func (*MessageMetadata) Descriptor() ([]byte, []int) {
	return fileDescriptor_38a7f6b62a9ba3a7, []int{5}
}

func (m *MessageMetadata) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MessageMetadata.Unmarshal(m, b)
}
func (m *MessageMetadata) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MessageMetadata.Marshal(b, m, deterministic)
}
func (m *MessageMetadata) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MessageMetadata.Merge(m, src)
}
func (m *MessageMetadata) XXX_Size() int {
	return xxx_messageInfo_MessageMetadata.Size(m)
}
func (m *MessageMetadata) XXX_DiscardUnknown() {
	xxx_messageInfo_MessageMetadata.DiscardUnknown(m)
}

var xxx_messageInfo_MessageMetadata proto.InternalMessageInfo

func (m *MessageMetadata) GetUniqueId() string {
	if m != nil {
		return m.UniqueId
	}
	return ""
}

func (m *MessageMetadata) GetPostToStreamAt() *timestamp.Timestamp {
	if m != nil {
		return m.PostToStreamAt
	}
	return nil
}

func (m *MessageMetadata) GetSourceTimestamp() *timestamp.Timestamp {
	if m != nil {
		return m.SourceTimestamp
	}
	return nil
}

func (m *MessageMetadata) GetLinks() []*Link {
	if m != nil {
		return m.Links
	}
	return nil
}

func (m *MessageMetadata) GetType() MessageMetadata_OperationType {
	if m != nil {
		return m.Type
	}
	return MessageMetadata_UNKNOWN
}

func (m *MessageMetadata) GetDrn() string {
	if m != nil {
		return m.Drn
	}
	return ""
}

func (m *MessageMetadata) GetDrnId() string {
	if m != nil {
		return m.DrnId
	}
	return ""
}

func (m *MessageMetadata) GetTraceId() string {
	if m != nil {
		return m.TraceId
	}
	return ""
}

func (m *MessageMetadata) GetParentId() string {
	if m != nil {
		return m.ParentId
	}
	return ""
}

func (m *MessageMetadata) GetSamplingPriority() string {
	if m != nil {
		return m.SamplingPriority
	}
	return ""
}

type Date struct {
	Year                 int32    `protobuf:"varint,1,opt,name=year,proto3" json:"year,omitempty"`
	Month                int32    `protobuf:"varint,2,opt,name=month,proto3" json:"month,omitempty"`
	Day                  int32    `protobuf:"varint,3,opt,name=day,proto3" json:"day,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Date) Reset()         { *m = Date{} }
func (m *Date) String() string { return proto.CompactTextString(m) }
func (*Date) ProtoMessage()    {}
func (*Date) Descriptor() ([]byte, []int) {
	return fileDescriptor_38a7f6b62a9ba3a7, []int{6}
}

func (m *Date) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Date.Unmarshal(m, b)
}
func (m *Date) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Date.Marshal(b, m, deterministic)
}
func (m *Date) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Date.Merge(m, src)
}
func (m *Date) XXX_Size() int {
	return xxx_messageInfo_Date.Size(m)
}
func (m *Date) XXX_DiscardUnknown() {
	xxx_messageInfo_Date.DiscardUnknown(m)
}

var xxx_messageInfo_Date proto.InternalMessageInfo

func (m *Date) GetYear() int32 {
	if m != nil {
		return m.Year
	}
	return 0
}

func (m *Date) GetMonth() int32 {
	if m != nil {
		return m.Month
	}
	return 0
}

func (m *Date) GetDay() int32 {
	if m != nil {
		return m.Day
	}
	return 0
}

type Response struct {
	StatusCode           int32    `protobuf:"varint,1,opt,name=status_code,json=statusCode,proto3" json:"status_code,omitempty"`
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_38a7f6b62a9ba3a7, []int{7}
}

func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (m *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(m, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetStatusCode() int32 {
	if m != nil {
		return m.StatusCode
	}
	return 0
}

func (m *Response) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

var E_TopicName = &proto.ExtensionDesc{
	ExtendedType:  (*descriptor.MessageOptions)(nil),
	ExtensionType: (*string)(nil),
	Field:         50000,
	Name:          "deliveroo.protobuf.messages.common.topic_name",
	Tag:           "bytes,50000,opt,name=topic_name",
	Filename:      "messages/common/common.proto",
}

var E_SnowStreamConfig = &proto.ExtensionDesc{
	ExtendedType:  (*descriptor.MessageOptions)(nil),
	ExtensionType: (*SnowStream)(nil),
	Field:         50001,
	Name:          "deliveroo.protobuf.messages.common.snow_stream_config",
	Tag:           "bytes,50001,opt,name=snow_stream_config",
	Filename:      "messages/common/common.proto",
}

var E_EventType = &proto.ExtensionDesc{
	ExtendedType:  (*descriptor.MessageOptions)(nil),
	ExtensionType: (*string)(nil),
	Field:         50002,
	Name:          "deliveroo.protobuf.messages.common.event_type",
	Tag:           "bytes,50002,opt,name=event_type",
	Filename:      "messages/common/common.proto",
}

func init() {
	proto.RegisterEnum("deliveroo.protobuf.messages.common.SnowStream_SinkType", SnowStream_SinkType_name, SnowStream_SinkType_value)
	proto.RegisterEnum("deliveroo.protobuf.messages.common.SnowStream_KafkaCluster", SnowStream_KafkaCluster_name, SnowStream_KafkaCluster_value)
	proto.RegisterEnum("deliveroo.protobuf.messages.common.MessageMetadata_OperationType", MessageMetadata_OperationType_name, MessageMetadata_OperationType_value)
	proto.RegisterType((*SnowStream)(nil), "deliveroo.protobuf.messages.common.SnowStream")
	proto.RegisterType((*Amount)(nil), "deliveroo.protobuf.messages.common.Amount")
	proto.RegisterType((*DeviceLocation)(nil), "deliveroo.protobuf.messages.common.DeviceLocation")
	proto.RegisterType((*Location)(nil), "deliveroo.protobuf.messages.common.Location")
	proto.RegisterType((*Link)(nil), "deliveroo.protobuf.messages.common.Link")
	proto.RegisterType((*MessageMetadata)(nil), "deliveroo.protobuf.messages.common.MessageMetadata")
	proto.RegisterType((*Date)(nil), "deliveroo.protobuf.messages.common.Date")
	proto.RegisterType((*Response)(nil), "deliveroo.protobuf.messages.common.Response")
	proto.RegisterExtension(E_TopicName)
	proto.RegisterExtension(E_SnowStreamConfig)
	proto.RegisterExtension(E_EventType)
}

func init() { proto.RegisterFile("messages/common/common.proto", fileDescriptor_38a7f6b62a9ba3a7) }

var fileDescriptor_38a7f6b62a9ba3a7 = []byte{
	// 997 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x55, 0xcd, 0x6e, 0xdb, 0x46,
	0x10, 0xae, 0xac, 0x1f, 0x4b, 0xe3, 0x9f, 0xd0, 0x8b, 0xba, 0x50, 0xdc, 0xb4, 0x36, 0xd8, 0x8b,
	0xd1, 0x22, 0x12, 0xe0, 0x1e, 0x0a, 0x24, 0x40, 0x51, 0x59, 0xa2, 0x0b, 0xc5, 0xd6, 0x0f, 0x28,
	0x1a, 0x45, 0x72, 0x61, 0xd7, 0xe4, 0x4a, 0x5e, 0x88, 0xdc, 0x65, 0x77, 0x97, 0x0e, 0xe4, 0x4b,
	0x6f, 0x79, 0x9b, 0x3e, 0x40, 0xdf, 0xa2, 0xed, 0xb5, 0x2f, 0x53, 0xec, 0x2e, 0x69, 0x39, 0xce,
	0xc1, 0x09, 0x7a, 0xe2, 0xcc, 0xb7, 0x3b, 0x33, 0x3b, 0x3f, 0xdf, 0x10, 0x9e, 0xa5, 0x44, 0x4a,
	0xbc, 0x20, 0xb2, 0x1b, 0xf1, 0x34, 0xe5, 0xac, 0xf8, 0x74, 0x32, 0xc1, 0x15, 0x47, 0x6e, 0x4c,
	0x12, 0x7a, 0x43, 0x04, 0xe7, 0x16, 0xb8, 0xca, 0xe7, 0x9d, 0xd2, 0xa0, 0x63, 0x6f, 0x1e, 0x1c,
	0x2e, 0x38, 0x5f, 0x24, 0xa4, 0x5b, 0x5e, 0xe8, 0x2a, 0x9a, 0x12, 0xa9, 0x70, 0x9a, 0x59, 0x9b,
	0x83, 0xa3, 0x87, 0x17, 0x62, 0x22, 0x23, 0x41, 0x33, 0xc5, 0x85, 0xbd, 0xe1, 0xfe, 0x5b, 0x05,
	0x98, 0x31, 0xfe, 0x76, 0xa6, 0x04, 0xc1, 0x29, 0x0a, 0xa0, 0x25, 0x29, 0x5b, 0x86, 0x6a, 0x95,
	0x91, 0x76, 0xe5, 0xa8, 0x72, 0xbc, 0x7b, 0xf2, 0x43, 0xe7, 0xf1, 0x97, 0x74, 0xd6, 0x2e, 0x3a,
	0x33, 0xca, 0x96, 0xc1, 0x2a, 0x23, 0x7e, 0x53, 0x16, 0x12, 0x3a, 0x84, 0xad, 0xab, 0x7c, 0x3e,
	0x27, 0x22, 0x94, 0xf4, 0x96, 0xb4, 0x37, 0x8e, 0x2a, 0xc7, 0x75, 0x1f, 0x2c, 0x34, 0xa3, 0xb7,
	0x04, 0xfd, 0x0a, 0x3b, 0x4b, 0x3c, 0x5f, 0xe2, 0x30, 0x4a, 0x72, 0xa9, 0x88, 0x68, 0x57, 0x4d,
	0xe8, 0x97, 0x9f, 0x18, 0xfa, 0x5c, 0xfb, 0xe8, 0x5b, 0x17, 0xfe, 0xf6, 0xf2, 0x9e, 0x86, 0xbe,
	0x80, 0x86, 0x20, 0x71, 0x1e, 0x91, 0x76, 0xed, 0xa8, 0x72, 0xdc, 0xf2, 0x0b, 0x0d, 0x3d, 0x83,
	0x56, 0x86, 0x85, 0xa2, 0x8a, 0x72, 0xd6, 0xae, 0x9b, 0xa3, 0x35, 0x80, 0xbe, 0x05, 0x27, 0x26,
	0x92, 0x08, 0x8a, 0x13, 0x7a, 0x4b, 0x84, 0x4e, 0xa6, 0xdd, 0x30, 0x97, 0x3e, 0xc0, 0xdd, 0x57,
	0xd0, 0x2c, 0x53, 0x47, 0xfb, 0xb0, 0x37, 0x1b, 0x8e, 0xcf, 0xc3, 0xe0, 0xf5, 0xd4, 0x0b, 0x2f,
	0xc7, 0xe7, 0xe3, 0xc9, 0x2f, 0x63, 0xe7, 0x33, 0x04, 0xd0, 0xe8, 0x4d, 0xa7, 0xde, 0x78, 0xe0,
	0x54, 0x50, 0x0b, 0xea, 0x23, 0xcf, 0xff, 0xd9, 0x73, 0x36, 0x90, 0x03, 0xdb, 0xfd, 0xcb, 0x59,
	0x30, 0x19, 0x85, 0x16, 0xa9, 0xba, 0x67, 0xb0, 0x7d, 0x3f, 0x17, 0xf4, 0x14, 0xf6, 0xcf, 0x7b,
	0x67, 0xe7, 0xbd, 0xb0, 0x7f, 0x71, 0x39, 0x0b, 0x3c, 0xff, 0x9e, 0xcf, 0x16, 0xd4, 0xcf, 0xfc,
	0xde, 0xf8, 0x8d, 0x53, 0xd1, 0x7e, 0x8c, 0xd8, 0xbb, 0x78, 0x1d, 0x0c, 0xfb, 0x33, 0x67, 0xc3,
	0x1d, 0x41, 0xa3, 0x97, 0xf2, 0x9c, 0x29, 0xf4, 0x35, 0xc0, 0x5c, 0xe0, 0x48, 0x67, 0x85, 0x13,
	0xd3, 0xd9, 0xba, 0x7f, 0x0f, 0x41, 0xdf, 0xc0, 0x4e, 0x94, 0x0b, 0x41, 0x58, 0xb4, 0x0a, 0x23,
	0x1e, 0xdb, 0x26, 0xb5, 0xfc, 0xed, 0x12, 0xec, 0xf3, 0x98, 0xb8, 0x7f, 0x56, 0x60, 0x77, 0x40,
	0x6e, 0x68, 0x44, 0x2e, 0x78, 0x84, 0x4d, 0x85, 0x0e, 0xa0, 0x99, 0x60, 0x45, 0x55, 0x1e, 0xdb,
	0x79, 0xa9, 0xf8, 0x77, 0xba, 0xae, 0x6d, 0xc2, 0xd9, 0xc2, 0x1e, 0x6e, 0x98, 0xc3, 0x35, 0x80,
	0xbe, 0x02, 0xc0, 0x51, 0x94, 0x0b, 0x1c, 0xad, 0xc2, 0xd4, 0x34, 0xbc, 0xee, 0xb7, 0x4a, 0x64,
	0xa4, 0x8d, 0xef, 0xa6, 0xd9, 0xf4, 0xac, 0xea, 0xaf, 0x01, 0x1d, 0x16, 0x27, 0x45, 0xd8, 0xba,
	0x0d, 0x5b, 0xea, 0xe8, 0x73, 0xa8, 0xcb, 0x8c, 0x90, 0xd8, 0x74, 0xaa, 0xe2, 0x5b, 0xc5, 0x1d,
	0x40, 0xf3, 0xff, 0x3f, 0xda, 0xed, 0x40, 0xed, 0x82, 0xb2, 0x25, 0x42, 0x50, 0x63, 0x38, 0xb5,
	0xd6, 0x2d, 0xdf, 0xc8, 0x1a, 0xbb, 0x16, 0x64, 0x5e, 0x54, 0xce, 0xc8, 0xee, 0x1f, 0x35, 0x78,
	0x32, 0xb2, 0x03, 0x3b, 0x22, 0x0a, 0xc7, 0x58, 0x61, 0xf4, 0x25, 0xb4, 0x72, 0x46, 0x7f, 0xcb,
	0x49, 0x48, 0xe3, 0xc2, 0x41, 0xd3, 0x02, 0xc3, 0x18, 0x79, 0xb0, 0x97, 0x71, 0xa9, 0x42, 0xc5,
	0x43, 0x69, 0x86, 0x3a, 0xc4, 0xca, 0x78, 0xdc, 0x3a, 0x39, 0xe8, 0x58, 0x36, 0xaf, 0xa9, 0x10,
	0x94, 0xf5, 0xf0, 0x77, 0xb5, 0x51, 0xc0, 0x2d, 0x0f, 0x7a, 0x0a, 0x79, 0xe0, 0x48, 0x9e, 0x8b,
	0x88, 0x84, 0xeb, 0x22, 0x56, 0x1f, 0xf5, 0xf2, 0xc4, 0xda, 0xdc, 0x01, 0xe8, 0x47, 0xa8, 0x27,
	0x94, 0x2d, 0x65, 0xbb, 0x76, 0x54, 0x3d, 0xde, 0x3a, 0x39, 0xfe, 0x18, 0x3e, 0xea, 0xfa, 0xf8,
	0xd6, 0x0c, 0x5d, 0x42, 0xcd, 0x6c, 0x92, 0xba, 0xa1, 0x73, 0xef, 0x63, 0xcc, 0x1f, 0x54, 0xab,
	0x33, 0xc9, 0x88, 0x30, 0x5d, 0x33, 0x3b, 0xc5, 0xb8, 0x43, 0x0e, 0x54, 0x63, 0xc1, 0x0a, 0x26,
	0x6a, 0x11, 0xed, 0x43, 0x23, 0x16, 0x4c, 0x17, 0x74, 0xd3, 0x80, 0xf5, 0x58, 0xb0, 0x61, 0x8c,
	0x9e, 0x42, 0x53, 0x09, 0x1c, 0x99, 0x4a, 0x37, 0xcd, 0xc1, 0xa6, 0xd1, 0x87, 0xb1, 0xee, 0x42,
	0x86, 0x05, 0x61, 0x4a, 0x9f, 0xb5, 0x6c, 0x17, 0x2c, 0x30, 0x8c, 0xd1, 0x77, 0xb0, 0x27, 0x71,
	0x9a, 0x25, 0x94, 0x2d, 0xc2, 0x4c, 0x50, 0x2e, 0xa8, 0x5a, 0xb5, 0xc1, 0x12, 0xbf, 0x3c, 0x98,
	0x16, 0xb8, 0xfb, 0x0a, 0x76, 0xde, 0x7b, 0x24, 0xda, 0x82, 0xcd, 0xf7, 0x38, 0xdf, 0xf7, 0xbd,
	0x5e, 0xe0, 0x39, 0x15, 0x2d, 0x5f, 0x4e, 0x07, 0x5a, 0xde, 0xd0, 0xf2, 0xc0, 0xbb, 0xf0, 0x02,
	0xcf, 0xa9, 0xa2, 0x26, 0xd4, 0xc6, 0x93, 0xc9, 0xd4, 0xa9, 0xb9, 0xa7, 0x50, 0x1b, 0x60, 0x65,
	0x66, 0x69, 0x45, 0xb0, 0x28, 0x88, 0x6a, 0x64, 0x3d, 0xd7, 0x29, 0x67, 0xea, 0xba, 0xd8, 0x9f,
	0x56, 0x31, 0xb5, 0xc0, 0xab, 0x82, 0x3f, 0x5a, 0x74, 0x3d, 0x68, 0xfa, 0x44, 0x66, 0x9c, 0x49,
	0xb3, 0x79, 0xa5, 0xc2, 0x2a, 0x97, 0x96, 0xd4, 0x05, 0xef, 0x2d, 0xa4, 0x29, 0x8d, 0xda, 0xb0,
	0x59, 0x74, 0xa0, 0x98, 0xdb, 0x52, 0x7d, 0xf1, 0x13, 0x80, 0xe2, 0x19, 0x8d, 0x42, 0x33, 0xdc,
	0x87, 0x1f, 0x8c, 0x4d, 0xd1, 0xa8, 0x49, 0xa6, 0xf3, 0x96, 0xed, 0xbf, 0xde, 0x55, 0xed, 0xf6,
	0x34, 0x46, 0x63, 0x9c, 0x92, 0x17, 0xbf, 0x03, 0x92, 0x8c, 0xbf, 0x2d, 0x07, 0x39, 0xe2, 0x6c,
	0x4e, 0x17, 0x8f, 0x7b, 0xfa, 0xfb, 0x9d, 0x9d, 0xd4, 0xce, 0xa7, 0x6d, 0x7f, 0xdf, 0x91, 0x77,
	0x72, 0xdf, 0x84, 0xd2, 0x29, 0x90, 0x1b, 0xdd, 0x62, 0x33, 0x35, 0x8f, 0x06, 0xfe, 0xa7, 0x4c,
	0xc1, 0x18, 0xe9, 0x56, 0x9e, 0x06, 0xa7, 0x5b, 0x7d, 0x13, 0x68, 0x92, 0x2b, 0x22, 0xde, 0x78,
	0x0b, 0xaa, 0xae, 0xf3, 0x2b, 0x1d, 0xbc, 0x7b, 0xf7, 0xb8, 0xae, 0x12, 0x98, 0xc9, 0x8c, 0x0b,
	0xf5, 0x3c, 0xe5, 0x31, 0x49, 0xe4, 0xf3, 0x05, 0xef, 0xea, 0x88, 0xb2, 0xfb, 0xe0, 0x0f, 0xff,
	0xd2, 0x7e, 0xae, 0x1a, 0xe6, 0x05, 0xdf, 0xff, 0x17, 0x00, 0x00, 0xff, 0xff, 0x8e, 0x72, 0x52,
	0xdd, 0x02, 0x08, 0x00, 0x00,
}
